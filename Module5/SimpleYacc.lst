
// ==========================================================================
//  GPPG error listing for yacc source file <SimpleYacc.y>
// ==========================================================================
//  Version:  1.3.6
//  Machine:  DESKTOP-BR3L60F
//  DateTime: 06.10.2022 17:12:24
//  UserName: Mike
// ==========================================================================


%{
// Ýòè îáúÿâëåíèÿ äîáàâëÿþòñÿ â êëàññ GPPGParser, ïðåäñòàâëÿþùèé ñîáîé ïàðñåð, ãåíåðèðóåìûé ñèñòåìîé gppg
    public Parser(AbstractScanner<int, LexLocation> scanner) : base(scanner) { }
%}

%output = SimpleYacc.cs

%namespace SimpleParser

%token BEGIN END CYCLE INUM RNUM ID ASSIGN SEMICOLON WHILE DO REPEAT UNTIL FOR TO IF THEN ELSE WRITE LPAR RPAR VAR COMMA PLUS MINUS MUL DIV

%%
// Error: NonTerminal symbol "NEWLINE" has no productions
// Warning: Terminating NEWLINE fixes the following size-1 NonTerminal set
   // {NEWLINE}
// Error: There are 1 non-terminating NonTerminal Symbols
   //  {NEWLINE}
// -----------------------------------------------------------------------

progr   : block
		;

stlist	: statement 
		| stlist SEMICOLON statement 
		| stlist NEWLINE statement
		;

statement: assign
		| block  
		| cycle
		| while
		| repeat
		| for
		| cond
		| write
		| var
		;

idlist  : ident
        | idlist COMMA ident
		;

ident 	: ID 
		;

var     : VAR idlist
        ;
	
assign 	: ident ASSIGN expr 
		;

expr    : expr2
        | expr PLUS expr2
        | expr MINUS expr2
        ;

expr2   : expr3
        | expr2 MUL expr3
        | expr2 DIV expr3
        ;

expr3   : ident
        | INUM 
        | LPAR expr RPAR
        ;

block	: BEGIN stlist END 
		;

cycle	: CYCLE expr statement 
		;

while   : WHILE expr DO statement
        ;

repeat  : REPEAT stlist UNTIL expr
        ;

for     : FOR ident ASSIGN expr TO expr DO statement
        ;

cond    : IF expr THEN statement
        | cond ELSE statement
		;

write   : WRITE LPAR expr RPAR
	    ;

%%
// ==========================================================================

